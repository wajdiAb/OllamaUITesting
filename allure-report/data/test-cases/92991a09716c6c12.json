{"uid":"92991a09716c6c12","name":"test_select_model_and_send_prompt","fullName":"tests.test_example.ChatFlowTest#test_select_model_and_send_prompt","historyId":"aabeaa2533b67fd8e31c7ad25178ee57","time":{"start":1755677819471,"stop":1755677885216,"duration":65745},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55efd9a0b2ca <unknown>\n#1 0x55efd94b2550 <unknown>\n#2 0x55efd95040f0 <unknown>\n#3 0x55efd95042e1 <unknown>\n#4 0x55efd95525e4 <unknown>\n#5 0x55efd9529bed <unknown>\n#6 0x55efd954f9e6 <unknown>\n#7 0x55efd9529993 <unknown>\n#8 0x55efd94f5d6b <unknown>\n#9 0x55efd94f7141 <unknown>\n#10 0x55efd99d02ab <unknown>\n#11 0x55efd99d40b9 <unknown>\n#12 0x55efd99b7139 <unknown>\n#13 0x55efd99d4c68 <unknown>\n#14 0x55efd999b60f <unknown>\n#15 0x55efd99f91f8 <unknown>\n#16 0x55efd99f93d6 <unknown>\n#17 0x55efd9a0a5e6 <unknown>\n#18 0x7484e529caa4 <unknown>\n#19 0x7484e5329c3c <unknown>","statusTrace":"self = <test_example.ChatFlowTest testMethod=test_select_model_and_send_prompt>\n\n    def test_select_model_and_send_prompt(self):\n        chat = ChatPage(self.driver, self.base_url).open()\n    \n        # Select model\n        chat.select_model(\"gemma3:1b\")\n        self.assertIn(\"gemma3:1b\", chat.selected_model_text())\n    \n        # Send a message\n        chat.send_message(\"write hello world!\")\n>       chat.wait_for_any_message()\n\ntests/test_example.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/chat_page.py:33: in wait_for_any_message\n    self.wait(EC.presence_of_element_located(self.ANY_MESSAGE), timeout=timeout)\npages/base_page.py:22: in wait\n    return WebDriverWait(self.driver, timeout or self.timeout).until(condition)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d952c79144df20d857b8030d0b9fb3e7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x753c5ecae200>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55efd9a0b2ca <unknown>\nE       #1 0x55efd94b2550 <unknown>\nE       #2 0x55efd95040f0 <unknown>\nE       #3 0x55efd95042e1 <unknown>\nE       #4 0x55efd95525e4 <unknown>\nE       #5 0x55efd9529bed <unknown>\nE       #6 0x55efd954f9e6 <unknown>\nE       #7 0x55efd9529993 <unknown>\nE       #8 0x55efd94f5d6b <unknown>\nE       #9 0x55efd94f7141 <unknown>\nE       #10 0x55efd99d02ab <unknown>\nE       #11 0x55efd99d40b9 <unknown>\nE       #12 0x55efd99b7139 <unknown>\nE       #13 0x55efd99d4c68 <unknown>\nE       #14 0x55efd999b60f <unknown>\nE       #15 0x55efd99f91f8 <unknown>\nE       #16 0x55efd99f93d6 <unknown>\nE       #17 0x55efd9a0a5e6 <unknown>\nE       #18 0x7484e529caa4 <unknown>\nE       #19 0x7484e5329c3c <unknown>\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ChatFlowTest","time":{"start":1755677815571,"stop":1755677819467,"duration":3896},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_ChatFlowTest::0","time":{"start":1755677885275,"stop":1755677885454,"duration":179},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_example"},{"name":"subSuite","value":"ChatFlowTest"},{"name":"host","value":"LAPTOP-J12RM8I3"},{"name":"thread","value":"160366-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_example"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"92991a09716c6c12.json","parameterValues":[]}